= semantic_form_for [:admin, @product] do |f|
  = f.semantic_errors *f.object.errors.keys

  = f.inputs "Product" do
    = f.input :name
    = f.input :category
    = f.input :brand
    = f.input :quality_rating_id, :as => :select, :collection => Hash[QualityRating.all.map{|b| [b.title,b.id]}]
    = f.input :approved
    = f.input :available
    = f.input :picture

  - unless @product.picture.blank?
    = f.inputs "Current Image" do
      = image_tag @product.picture(:original)

  = f.inputs "Locations" do
    = f.input :parent_ids, :label => "Parent Locations", :as => :select, :collection => options_from_collection_for_select(Location.parent_locations, :id, :name, f.object.selected_parents), :multiple => true, :input_html => { :style => "height: 150px; width: 350px;" }
    %li
      = label_tag 'Select State'
      = select_tag "product_state_select", options_for_select(Location.pluck(:state).uniq.reject(&:blank?).sort.each_with_index.map { |state,idx| [state, idx] }), :include_blank => true, :style => 'width:350px;'
    %li
      = label_tag 'Select City'
      = select_tag "product_city_select", options_for_select(""), :include_blank => true, :style => 'width:350px;'
    %li
      = label_tag 'Select Zip Code'
      = select_tag "product_zipcode_select", options_for_select(""), :include_blank => true, :style => 'width:350px;'
    = f.input :location_ids, :label => "Locations", :as => :select, :collection => ['',''], :multiple => true, :input_html => { :style => "height: 250px; width: 350px;", :id => 'product_location_select' }

  = f.actions

:javascript
  $(document).ready(function() {
    $('#product_state_select').change(function() {
      $.ajax({
        url: "#{select_cities_admin_products_path}",
        data: {
          state : $('#product_state_select option:selected').text()
        },
      });
    });
    $('#product_city_select').change(function() {
      $.ajax({
        url: "#{select_zipcodes_admin_products_path}",
        data: {
          state : $('#product_state_select option:selected').text(),
          city : $('#product_city_select option:selected').text()
        },
        dataType: "script"
      });
    });
    $('#product_zipcode_select').change(function() {
      $.ajax({
        url: "#{select_locations_admin_products_path}",
        data: {
          state : $('#product_state_select option:selected').text(),
          city : $('#product_city_select option:selected').text(),
          zipcode : $('#product_zipcode_select option:selected').text(),
          product : window.location.pathname.replace(/^\/admin\/products\//,"").replace(/\/edit$/,"")
        },
        dataType: "script"
      });
    });
  }); 
